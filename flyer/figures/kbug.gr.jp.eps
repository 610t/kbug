%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (kbug.gr.jp.eps)
%%CreationDate: (2016-03-11T12:38:10+09:00)
%%BoundingBox: -0 -0 111 111
%%HiResBoundingBox: 0 0 111 111
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 111 111
userdict begin
DisplayImage
0 0
111 111
12
111 111
1
1
1
1
FFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF
FFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFF
FFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFF
FFFFFFFFFFFFFFFFFFFFFFFEFFF0000071FFFF8007FC00001FFEFFF0000071FFFF8007FC00001F
FEFFF0000071FFFF8007FC00001FFEFFF1FFFC7E3FE00FC7FC7FFF1FFEFFF1FFFC7E3FE00FC7FC
7FFF1FFEFFF1FFFC7E3FE00FC7FC7FFF1FFEFFF1C01C7FF803F1C0FC70071FFEFFF1C01C7FF803
F1C0FC70071FFEFFF1C01C7FF803F1C0FC70071FFEFFF1C01C71FF1C0FC7FC70071FFEFFF1C01C
71FF1C0FC7FC70071FFEFFF1C01C71FF1C0FC7FC70071FFEFFF1C01C7E000071C01C70071FFEFF
F1C01C7E000071C01C70071FFEFFF1C01C7E000071C01C70071FFEFFF1FFFC7E00E07E381C7FFF
1FFEFFF1FFFC7E00E07E381C7FFF1FFEFFF1FFFC7E00E07E381C7FFF1FFEFFF0000071C71C71C7
1C00001FFEFFF0000071C71C71C71C00001FFEFFF0000071C71C71C71C00001FFEFFFFFFFFFFF8
1F8E071FFFFFFFFEFFFFFFFFFFF81F8E071FFFFFFFFEFFFFFFFFFFF81F8E071FFFFFFFFEFFFFC7
00703FFFFFC703FE3F1FFEFFFFC700703FFFFFC703FE3F1FFEFFFFC700703FFFFFC703FE3F1FFE
FFFE3FFF81FF03FE00E00FFF1FFEFFFE3FFF81FF03FE00E00FFF1FFEFFFE3FFF81FF03FE00E00F
FF1FFEFFF007FC70381C0E3FE3FE001FFEFFF007FC70381C0E3FE3FE001FFEFFF007FC70381C0E
3FE3FE001FFEFFFFC0FFFE0000703F1C0FF8FFFEFFFFC0FFFE0000703F1C0FF8FFFEFFFFC0FFFE
0000703F1C0FF8FFFEFFFE3F1C7038E001F8FC7FFFFFFEFFFE3F1C7038E001F8FC7FFFFFFEFFFE
3F1C7038E001F8FC7FFFFFFEFFFE381F80001F81C7000FFF1FFEFFFE381F80001F81C7000FFF1F
FEFFFE381F80001F81C7000FFF1FFEFFFFC71C0E3FFC01C7E3FFC01FFEFFFFC71C0E3FFC01C7E3
FFC01FFEFFFFC71C0E3FFC01C7E3FFC01FFEFFFFC0E3F03F038FFF0001F81FFEFFFFC0E3F03F03
8FFF0001F81FFEFFFFC0E3F03F038FFF0001F81FFEFFF1F8E07FFFE3F03F000E3F1FFEFFF1F8E0
7FFFE3F03F000E3F1FFEFFF1F8E07FFFE3F03F000E3F1FFEFFFFC0FF8007038E07E07FF81FFEFF
FFC0FF8007038E07E07FF81FFEFFFFC0FF8007038E07E07FF81FFEFFFE381C0E07E00FC7038E38
1FFEFFFE381C0E07E00FC7038E381FFEFFFE381C0E07E00FC7038E381FFEFFF1C01FF1FFE3FFC0
FC7E381FFEFFF1C01FF1FFE3FFC0FC7E381FFEFFF1C01FF1FFE3FFC0FC7E381FFEFFFE001C01C7
1C00070001F81FFEFFFE001C01C71C00070001F81FFEFFFE001C01C71C00070001F81FFEFFFFFF
FFF000E380071FF1F81FFEFFFFFFFFF000E380071FF1F81FFEFFFFFFFFF000E380071FF1F81FFE
FFF000007FF8FC7E381C71C01FFEFFF000007FF8FC7E381C71C01FFEFFF000007FF8FC7E381C71
C01FFEFFF1FFFC71C7FFFE3F1FF1FF1FFEFFF1FFFC71C7FFFE3F1FF1FF1FFEFFF1FFFC71C7FFFE
3F1FF1FF1FFEFFF1C01C700700000700003FFFFEFFF1C01C700700000700003FFFFEFFF1C01C70
0700000700003FFFFEFFF1C01C7E3FFC7FC71FF1C7FFFEFFF1C01C7E3FFC7FC71FF1C7FFFEFFF1
C01C7E3FFC7FC71FF1C7FFFEFFF1C01C7007E071F803F1FF1FFEFFF1C01C7007E071F803F1FF1F
FEFFF1C01C7007E071F803F1FF1FFEFFF1FFFC7FC7E381FF000FF8FFFEFFF1FFFC7FC7E381FF00
0FF8FFFEFFF1FFFC7FC7E381FF000FF8FFFEFFF000007FC70001C01FF1F81FFEFFF000007FC700
01C01FF1F81FFEFFF000007FC70001C01FF1F81FFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF
FFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFE
end
%%PageTrailer
%%Trailer
%%EOF
